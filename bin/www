// Names: Mishaal.G and Casey.P
// Date: Nov.12.2024
// Class: Web and Script Programming
// Purpose: This sets up the HTTP server and starts it. It also sets up the routes and error handling.

//This imports  main Express app and the modules we need
var app = require('../app');
var debug = require('debug')('project-1:server');
var http = require('http');

// Port setting and HTTP server creation with express
var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);
var server = http.createServer(app);

// Starts the server and listens on the port specified
server.listen(port);
server.on('error', onError); // Connects the error handler
server.on('listening', onListening); // Attaches listening handler


// Port number is normalized to a string, number or false
function normalizePort(val) {
  var port = parseInt(val, 10); // Port for valuing  to a  integer 

  if (isNaN(port)) {
    // If a number isnt returned as a its given "pipe" name
    return val;
  }

  if (port >= 0) {
    // If valuid port number is there returns it
    return port;
  }

  return false; //If not then return as a false
}


// Checks if bind is a port number or a pipe name
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // Handles the specific listen errors with messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1); 
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}


// Event listener for the HTTP servers listening event
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

//End of program
